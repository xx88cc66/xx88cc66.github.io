[{"content":"0x00 并发的利用 (不修改参数)插件版 并发漏洞的利用主要使用burpsuit里面的插件：tutbo intruder插件。\n二、利用步骤 先将随便一个商品加入购物车 可以看见原本的价格是1300多块钱 现在使用并发漏洞重复使用优惠价达到免费购物 抓包填写优惠券的包 将包发给tutbo intruder 这里注意如果是http1 要将代码中的burp1中的1删掉 还有注意就是得把上面抓的包给丢掉 因为是条件竞争 一旦成功使用优惠后续操作即会无效 可以看见价格可以被打下来了只需要100多块钱即可购买 多并发几次即可达成0元购\n0x02 并发的利用 (不修改参数)burp2024版 将上面填写优惠的包丢进重放 多复制几个包创建小组 然后选择第发送的第4个模块也可以成功并发\n0x02 并发的利用 (改参数) 将优惠卷的包丢进tutbo intruder插件 然后使用大佬给的脚本 并将想要改的参数加上%s 然后将你想添加的参数进行复制脚本就会自动读取你的剪切板 ","date":"2024-12-28T00:00:00Z","permalink":"https://xx88cc66.github.io/p/%E5%B9%B6%E5%8F%91%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"并发漏洞挖掘小技巧"},{"content":"0x00 注册projectdiscovery拿到key去调用api来使用\nhttp://projectdiscovery.io\n注册完点击头像即可看见api key\n拿到key即可使用\n0x01 chaos使用 chaos全面收集互联网子域名\n打开运行显示key不存在\n-key 来输入key -d 指定要查找的域名\n-count看记录了多少域名\n-o将他输出为txt来查看\n0x02收集网段信息 :::info https://bgp.he.net\n:::\n1.根据证书获取组织名 组织名获取ip段\n2.组织名获取asn号码获取ip段\n公司专门去asn去申请了这个号\n0x03 asnamp可以利用来获取信息 首先使用asnmap.exe -auth登录一下 用之前的key\n单个扫描-a 编号\n-i ip//反查公司 找到网段去asn网站查询出asn编号 再通过网站查询编号所属公司\n-o xxx.txt 批量扫描\n0x04 mapcidr网段拆分为ip 老规矩输入一下key\n-cl xxx.xxx.xx.xx/xx\n0x05根域名获取 通过ssl证书方向whois\ntools.whoisxmlapi.com\n通过ssl证书组织名进行证书查询 看看哪些网站用了相同证书\ncrt.sh\n0x06 网段测活 fscan 命令 fscan -hf xxx.txt -nopoc\n全端口扫描 指纹识别\n0x07 dns dns 就等于把ip翻译成域名的意思\ndns解析记录什么意思\nA:记录 www.baidu.com-\u0026gt;dns-\u0026gt;xx.x.xx.x.x\ncname:将一个域名解析到另一个域名\n这里发现当你ping百度第一时间会ping到另一个域名\n比如配置一个云waf你需要\n浏览器访问\u0026ndash;\u0026gt;www.xxx.com\u0026ndash;\u0026gt;cname\u0026ndash;\u0026gt;云waf.com\u0026ndash;\u0026gt;真正的服务器地址\n查询dns解析\nwin nslookup\nlinux dig\n0x08 dns dnsx\n这个工具即可查询上面的\n这里说明已经做了安全加固了 不能邮件伪造操作\n端口探测\nlinux ：telnet\ntelnet xxx.xxx.com 端口号\n17ce.com\n判断有无cdn\n一般ip地址一致基本不存在cdn\nnaabu\n-host\n","date":"2024-12-28T00:00:00Z","permalink":"https://xx88cc66.github.io/p/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86dnsxnabbuasnampmapcidr%E4%BD%BF%E7%94%A8/","title":"信息收集dnsx,nabbu,asnamp,mapcidr使用"},{"content":"0x00 什么是JWT： JSON 网络令牌 (JWT) 是一种标准化格式，用于在系统之间发送加密签名的 JSON 数据。它们理论上可以包含任何类型的数据，但最常用于发送有关用户的信息（“声明”），作为身份验证、会话处理和访问控制机制的一部分。 与经典会话令牌不同，服务器需要的所有数据都存储在 JWT 本身的客户端。这使得 JWT 成为高度分布式网站的热门选择，用户需要与多个后端服务器无缝交互。 简单理解JWT的本质就是：把用户信息通过加密后生成的一个字符串。\njwt分为3部分\nHEADER：令牌头部，记录了整个令牌的类型和签名算法 PAYLOAD：令牌负荷，记录了保存的主体信息，比如你要保存的用户信息就可以放到这里,可以减少数据库的访问。 Signature：就是把header + payload + 密匙进行加密以后的密文数据。\n0x01 burp的jwt绕过靶场 (未经验证的签名绕过 JWT 身份验证)： 根据题目要求得知，需使用账号+密码：wiener : peter登录，后访问/admin页面，根据要求删除carlos用户即可通关。 用系统提供的账号密码登录 为用户wiener 然后访问admin目录发现jwt密钥 首先将jwt的第三部分删掉看看对密钥的检查是否严格 可以发现重放后还是可以继续访问 复制去jwt.io 看看密钥 可以看见wiener账户在密钥中 把他改成管理员即可访问绕过jwt验证 可以看见重放后已经成功绕过验证并且登陆了\n0x02 burp的jwt绕过靶场 (有缺陷的签名验证绕过 JWT 身份验证)： 同第一个关一样正常登入账户密码抓包， 按照第一关方法修改administrator账号访问 /admin 后发现，仍无法成功。 因为在Header中，设置alg的值可以选择签名方式，可以选择HS256，即HMAC和SHA256。在某种情况下可以设置为None，即不签名，但是一般都会过滤这种危险的设置。 将alg的值改为none 再重复第一关操作 再将第三段删掉 即可绕过 0x03 burp的jwt绕过靶场 (：弱签名密钥绕过 JWT 身份验证) 将第三段的密钥进行爆破 即可再重复第一关操作即可通过 ","date":"2024-12-27T00:00:00Z","permalink":"https://xx88cc66.github.io/p/jwt%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%8A%A0%E5%AF%86%E7%BB%95%E8%BF%87/","title":"jwt身份验证加密绕过"},{"content":"0x00 什么是swagger 一、什么是swagger Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化RESTful风格的 Web 服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。Swagger让部署管理和使用功能强大的API变得非常简单。 简单来说，就是后端给前端提供的一个可以查看各种接口的方法、类型等。\n0x01 swagger src利用 一般在进行信息收集灯塔扫描中一般会发现这些页面 可以直接丢进大佬写的spring_boot扫描看看有没有什么敏感文件接口 最理想的情况是扫到heapdump 里面记录了很多登录密码 key等等 扫到可以用deapdump_tool进行解读\n0x02 swagger 手工测试 一般扫到类似api—docx等等可以丢进apifox进行使用 新建项目 导入接口 输入扫到的url 成功导入 现在配置测试环境 输入扫到的url地址 可以看见接口已经可以成功调用了可以进行深挖来提高危害\n0x03 swagger 自动化测试 点击自动化测试 添加步骤把上面的导入的接口导入进去 然后把这些危险请求给删掉put delete 以免触碰红线 然后配置网络代理 为127.0.0.1:8080将流量导入burp进行自动化测试 ","date":"2024-12-27T00:00:00Z","permalink":"https://xx88cc66.github.io/p/swagger%E6%B7%B1%E5%85%A5%E5%88%A9%E7%94%A8/","title":"swagger深入利用"}]