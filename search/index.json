[{"content":"0x00 并发的利用 (不修改参数)插件版 并发漏洞的利用主要使用burpsuit里面的插件：tutbo intruder插件。\n二、利用步骤 先将随便一个商品加入购物车 可以看见原本的价格是1300多块钱 现在使用并发漏洞重复使用优惠价达到免费购物 抓包填写优惠券的包 将包发给tutbo intruder 这里注意如果是http1 要将代码中的burp1中的1删掉 还有注意就是得把上面抓的包给丢掉 因为是条件竞争 一旦成功使用优惠后续操作即会无效 可以看见价格可以被打下来了只需要100多块钱即可购买 多并发几次即可达成0元购\n0x02 并发的利用 (不修改参数)burp2024版 将上面填写优惠的包丢进重放 多复制几个包创建小组 然后选择第发送的第4个模块也可以成功并发\n0x02 并发的利用 (改参数) 将优惠卷的包丢进tutbo intruder插件 然后使用大佬给的脚本 并将想要改的参数加上%s 然后将你想添加的参数进行复制脚本就会自动读取你的剪切板 ","date":"2024-12-28T00:00:00Z","permalink":"https://xx88cc66.github.io/p/%E5%B9%B6%E5%8F%91%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"并发漏洞挖掘小技巧"},{"content":"0x00 注册projectdiscovery拿到key去调用api来使用\nhttp://projectdiscovery.io\n注册完点击头像即可看见api key\n拿到key即可使用\n0x01 chaos使用 chaos全面收集互联网子域名\n打开运行显示key不存在\n-key 来输入key -d 指定要查找的域名\n-count看记录了多少域名\n-o将他输出为txt来查看\n0x02收集网段信息 :::info https://bgp.he.net\n:::\n1.根据证书获取组织名 组织名获取ip段\n2.组织名获取asn号码获取ip段\n公司专门去asn去申请了这个号\n0x03 asnamp可以利用来获取信息 首先使用asnmap.exe -auth登录一下 用之前的key\n单个扫描-a 编号\n-i ip//反查公司 找到网段去asn网站查询出asn编号 再通过网站查询编号所属公司\n-o xxx.txt 批量扫描\n0x04 mapcidr网段拆分为ip 老规矩输入一下key\n-cl xxx.xxx.xx.xx/xx\n0x05根域名获取 通过ssl证书方向whois\ntools.whoisxmlapi.com\n通过ssl证书组织名进行证书查询 看看哪些网站用了相同证书\ncrt.sh\n0x06 网段测活 fscan 命令 fscan -hf xxx.txt -nopoc\n全端口扫描 指纹识别\n0x07 dns dns 就等于把ip翻译成域名的意思\ndns解析记录什么意思\nA:记录 www.baidu.com-\u0026gt;dns-\u0026gt;xx.x.xx.x.x\ncname:将一个域名解析到另一个域名\n这里发现当你ping百度第一时间会ping到另一个域名\n比如配置一个云waf你需要\n浏览器访问\u0026ndash;\u0026gt;www.xxx.com\u0026ndash;\u0026gt;cname\u0026ndash;\u0026gt;云waf.com\u0026ndash;\u0026gt;真正的服务器地址\n查询dns解析\nwin nslookup\nlinux dig\n0x08 dns dnsx\n这个工具即可查询上面的\n这里说明已经做了安全加固了 不能邮件伪造操作\n端口探测\nlinux ：telnet\ntelnet xxx.xxx.com 端口号\n17ce.com\n判断有无cdn\n一般ip地址一致基本不存在cdn\nnaabu\n-host\n","date":"2024-12-28T00:00:00Z","permalink":"https://xx88cc66.github.io/p/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86dnsxnabbuasnampmapcidr%E4%BD%BF%E7%94%A8/","title":"信息收集dnsx、nabbu,asnamp,mapcidr使用"},{"content":"0x00 什么是JWT： JSON 网络令牌 (JWT) 是一种标准化格式，用于在系统之间发送加密签名的 JSON 数据。它们理论上可以包含任何类型的数据，但最常用于发送有关用户的信息（“声明”），作为身份验证、会话处理和访问控制机制的一部分。 与经典会话令牌不同，服务器需要的所有数据都存储在 JWT 本身的客户端。这使得 JWT 成为高度分布式网站的热门选择，用户需要与多个后端服务器无缝交互。 简单理解JWT的本质就是：把用户信息通过加密后生成的一个字符串。\njwt分为3部分\nHEADER：令牌头部，记录了整个令牌的类型和签名算法 PAYLOAD：令牌负荷，记录了保存的主体信息，比如你要保存的用户信息就可以放到这里,可以减少数据库的访问。 Signature：就是把header + payload + 密匙进行加密以后的密文数据。\n0x01 burp的jwt绕过靶场 (未经验证的签名绕过 JWT 身份验证)： 根据题目要求得知，需使用账号+密码：wiener : peter登录，后访问/admin页面，根据要求删除carlos用户即可通关。 用系统提供的账号密码登录 为用户wiener 然后访问admin目录发现jwt密钥 首先将jwt的第三部分删掉看看对密钥的检查是否严格 可以发现重放后还是可以继续访问 复制去jwt.io 看看密钥 可以看见wiener账户在密钥中 把他改成管理员即可访问绕过jwt验证 可以看见重放后已经成功绕过验证并且登陆了\n0x02 burp的jwt绕过靶场 (有缺陷的签名验证绕过 JWT 身份验证)： 同第一个关一样正常登入账户密码抓包， 按照第一关方法修改administrator账号访问 /admin 后发现，仍无法成功。 因为在Header中，设置alg的值可以选择签名方式，可以选择HS256，即HMAC和SHA256。在某种情况下可以设置为None，即不签名，但是一般都会过滤这种危险的设置。 将alg的值改为none 再重复第一关操作 再将第三段删掉 即可绕过 0x03 burp的jwt绕过靶场 (：弱签名密钥绕过 JWT 身份验证) 将第三段的密钥进行爆破 即可再重复第一关操作即可通过 ","date":"2024-12-27T00:00:00Z","permalink":"https://xx88cc66.github.io/p/jwt%E8%BA%AB%E4%BB%BD%E9%AA%8C%E8%AF%81%E5%8A%A0%E5%AF%86%E7%BB%95%E8%BF%87/","title":"jwt身份验证加密绕过"},{"content":"基础语法 print 注释 单行注释 ctrl+/ 变量 变量命名规范： 必须由字母、数字、下划线组成，不能以数字开头 不可以使用 Python 的偳键字作为变量名 区分大小備 建议用驼峰命名法：HelloWord，helloWord 下划线连接法：hello_word\nimport 导包 1 2 import requests from random import randint as rd//缩短命令 Python 源代码文件就是一个模块 模块让你能够有逻辑地组织你的 Python 代码段。 把相偳的代码分配到一个模块里能让你的代码更好用，更易懂。 模块能定义函数，类和变量，模块里也能包含可执行的代码。 pip 安装第三方包 修改 pip 源 pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 可以手动更改pip的配置文件，以达到更改镜像源的效果。在用户目录下（Windows 系统为 C:\\Users\\用户名，Linux 系统为/home/用户名）创建.pip目录，然后在该目录下创建 pip.conf文件，備健如下傅容： ``` [global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple ``` -i 临时使用 python setup.py install\n单引号、双引号、三引号\n1 2 3 4 5 6 st=\u0026#39;111\u0026#39;/1111\u0026#39;/111 st=\u0026#39;\u0026#39;\u0026#39; 11111 \u0026#39;\u0026#39;\u0026#39; str1 = \u0026#34;\u0026#39;aaaaa\\\u0026#39;aaaaa\\\u0026#39;aaaaa\\\u0026#39;aaaaa\\\u0026#39;\u0026#34; 数据类型 数字 字符串 布尔 列表 元组\n字典\n1 list =[1,2,\u0026#39;aaaa\u0026#39;,{\u0026#39;name\u0026#39;:\u0026#39;1111\u0026#39;}//字典,(1,2)] type 函数 可以获取变量的数据类型 类型转换 int() float() str() 1 2 3 4 5 6 7 s = 2.8 st = int(s) print(type(st))//type判断类型 s = 2.8 st = int(s) print(st) 运算符 算术运算符 优先级\n() \u0026gt; ** \u0026gt; * / // % \u0026gt; + -\n**幂运算\n//歂商\n%歂余\n比较运算符\n\u0026lt; \u0026gt;= \u0026lt;= == ！=\n循环语句\nfor\nwhile\n1 2 3 xzh =[1,2,3,4,5,6,7,8,9,10] for i in xzh: print(i) 1 2 3 xzh = open(\u0026#39;1111.txt\u0026#39;,\u0026#39;r\u0026#39;).readline()//读取文件所有内容 for f in xzh: print(f)// 1 2 3 4 aaa = 0 while(aaa\u0026lt;9)://循环条件 print(aaa) aaa =aaa+1 1 2 3 aaa = 0 while True: print(aaa) if 判断 if if else 1 2 3 4 if(1\u0026gt;2): print(111) else: print(222) 列表、字典、元组、集合操作 列表 访问列表里的值：\n1 2 3 li = [1,2,3,4,\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;,\u0026#39;d\u0026#39;,\u0026#39;e\u0026#39;] print(li[2:])访问3到3后面的 print(li[2])访问3 从0开始\n添加列表元素\n1 2 3 aaa = [] aaa.append(\u0026#39;abc\u0026#39;) print(aaa) 删除列表元素\n1 2 3 del aaa[0] del aaa[0:]//删除0后面的 print(aaa) 最大值最小值\n1 2 3 4 5 6 7 8 aaa=[1,2,3,4,5] print(max(aaa)) print(min(aaa)) print(len(aaa))//字符串有多少 print(aaa.count(2))//2在字符串里出现的次数 aaa[2]=\u0026#39;需要修改成什么\u0026#39; 字典 1 2 3 4 5 6 bbb={\u0026#39;xzh\u0026#39;:\u0026#39;shuaige\u0026#39;,\u0026#39;age\u0026#39;:\u0026#39;22\u0026#39;} 1.print(bbb.get(\u0026#39;xzh\u0026#39;))//获取xzh的值 2.for keys,values in bbb.items(): print(keys,values)//for循环打印所有值 3.bbb[\u0026#39;xzh\u0026#39;]=\u0026#39;meinv\u0026#39; print(bbb)//修改值 列表去重\n1 2 3 4 5 6 7 8 9 li = [1,2,3,4,5,6,7,2,2,3,4,1,2,3,4] templist = [] for l in li: if l not in templist: templist.append(l) else: print(l,\u0026#39;重复\u0026#39;) print(templist) 函数 python顺序从上到下\n函数下面没写东西得加上pass不然会报错\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 import requests st = 1#全局变量 def get_all_url(url,**payload):#def定义函数 **xxx指定多个 print(st) global st1 #global引用 print(payload[\u0026#39;payload1\u0026#39;]) print(\u0026#39;爬虫代码\u0026#39;) def sqli(): print(\u0026#39;是否有注入\u0026#39;) res = get_all_url(\u0026#39;url\u0026#39;,payload=\u0026#39;payload\u0026#39;,payload1=\u0026#39;p1\u0026#39;,payload2=\u0026#39;p2\u0026#39;) print(res) print(st1) 1 2 3 4 5 6 7 def calc1(type, **nums): if type == \u0026#39;乘\u0026#39;: return nums[\u0026#39;nums1\u0026#39;] * nums[\u0026#39;nums2\u0026#39;] res= calc1(type=\u0026#39;乘\u0026#39;, nums1=1, nums2=2)#type类型 print(res) 匿名函数\n只能写一行代码\n1 2 fun1 = lambda a,b:a+b print(fun1(1,2)) ","date":"2024-12-27T00:00:00Z","permalink":"https://xx88cc66.github.io/p/python%E5%9F%BA%E7%A1%801/","title":"python基础1"},{"content":"0.一般src会给你指定的域名没有往下面找 1 1 firefly-src.geekyoung.com 有详细src列表\n关注任意src可以获得他的域名列表\n2.企查查 爱企查 企查查 着重看这3点\n看股权分配 百分之五十一 一般都会收 爱企查可以免费查询\n一般上面控股的不能挖 只能看下面的 看看是否大于百分之五十一\n3.icp备案查询 这里查找十分麻烦可以打开burp利用工具\n抓到此包\n然后返回包就有一个大数据然后用下面脚本获取返回包里的信息\nu0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;zh-CN\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; \u0026lt;title\u0026gt;ICP备案资产提取器\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { background-color: #000; /* 黑色背景 */ color: #0f0; /* 绿色文本 */ font-family: \u0026#39;Consolas\u0026#39;, monospace; /* 代码风格字体 */ margin: 0; padding: 0; display: flex; flex-direction: column; align-items: center; height: 100vh; overflow: hidden; } h1 { text-align: center; margin-top: 20px; font-size: 3rem; letter-spacing: 3px; color: #0f0; text-shadow: 0 0 15px #0f0, 0 0 30px #00ff00; } textarea { background-color: #121212; /* 深灰色背景 */ color: #0f0; /* 绿色字体 */ border: 2px solid #0f0; /* 绿色边框 */ padding: 10px; width: 90%; height: 150px; font-size: 1.1rem; border-radius: 10px; margin-top: 10px; margin-bottom: 10px; box-shadow: 0 0 15px #00ff00; /* 光晕效果 */ } button { background: linear-gradient(90deg, #00ff00, #006600); /* 渐变绿色 */ color: #000; font-size: 1.2rem; border: none; padding: 12px 40px; cursor: pointer; margin: 5px; border-radius: 10px; box-shadow: 0 0 15px #0f0; text-transform: uppercase; transition: all 0.3s; } button:hover { background: linear-gradient(90deg, #006600, #00ff00); /* 翻转渐变色 */ box-shadow: 0 0 25px #00ff00, 0 0 50px #0f0; } ul { list-style-type: none; padding-left: 0; width: 90%; margin-top: 10px; overflow-y: auto; max-height: 300px; border: 1px solid #0f0; border-radius: 10px; background-color: #121212; box-shadow: 0 0 15px #00ff00; } li { padding: 5px; border-bottom: 1px solid #0f0; word-break: break-all; color: #fff; } li:last-child { border-bottom: none; } .error { color: red; margin-top: 10px; font-size: 1rem; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt;ICP备案资产提取器\u0026lt;/h1\u0026gt; \u0026lt;textarea id=\u0026#34;jsonInput\u0026#34; placeholder=\u0026#34;粘贴HTTP响应内容...\u0026#34;\u0026gt;\u0026lt;/textarea\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button onclick=\u0026#34;extractDomain()\u0026#34;\u0026gt;提取域名\u0026lt;/button\u0026gt; \u0026lt;button onclick=\u0026#34;extractServiceName()\u0026#34;\u0026gt;提取App或小程序\u0026lt;/button\u0026gt; \u0026lt;button onclick=\u0026#34;copyResults()\u0026#34;\u0026gt;一键复制\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;ul id=\u0026#34;resultList\u0026#34;\u0026gt;\u0026lt;/ul\u0026gt; \u0026lt;p id=\u0026#34;errorMessage\u0026#34; class=\u0026#34;error\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; const encryptedAuthor = \u0026#34;ZGl0dWRhc2hpLXJldHVybndyb25nMjAyNA==\u0026#34;; function decryptAuthorInfo(encoded) { return atob(encoded); } function showAuthorInfo() { const authorInfo = decryptAuthorInfo(encryptedAuthor); console.log(`echo: ${authorInfo}`); } showAuthorInfo(); function parseJSONFromResponse(input) { const jsonStart = input.indexOf(\u0026#39;{\u0026#39;); if (jsonStart === -1) { throw new Error(\u0026#39;未找到有效的JSON部分\u0026#39;); } const jsonString = input.slice(jsonStart); return JSON.parse(jsonString); } function extractDomain() { handleExtraction(item =\u0026gt; item.domain, \u0026#39;未找到域名数据。\u0026#39;); } function extractServiceName() { handleExtraction(item =\u0026gt; item.serviceName, \u0026#39;未找到App或小程序数据。\u0026#39;); } function handleExtraction(mapper, emptyMessage) { const jsonInput = document.getElementById(\u0026#39;jsonInput\u0026#39;).value; const errorMessage = document.getElementById(\u0026#39;errorMessage\u0026#39;); const resultList = document.getElementById(\u0026#39;resultList\u0026#39;); errorMessage.textContent = \u0026#39;\u0026#39;; resultList.innerHTML = \u0026#39;\u0026#39;; try { const response = parseJSONFromResponse(jsonInput); const results = response.params.list.map(mapper).filter(Boolean); if (results.length === 0) { resultList.innerHTML = `\u0026lt;li\u0026gt;${emptyMessage}\u0026lt;/li\u0026gt;`; } else { results.forEach(result =\u0026gt; { const li = document.createElement(\u0026#39;li\u0026#39;); li.textContent = result; resultList.appendChild(li); }); } } catch (error) { errorMessage.textContent = \u0026#39;无效的HTTP响应内容或JSON格式，请检查输入。\u0026#39;; } } function copyResults() { const resultList = document.getElementById(\u0026#39;resultList\u0026#39;); const items = Array.from(resultList.querySelectorAll(\u0026#39;li\u0026#39;)).map(li =\u0026gt; li.textContent); if (items.length \u0026gt; 0) { navigator.clipboard.writeText(items.join(\u0026#39;\\n\u0026#39;)).then(() =\u0026gt; { alert(\u0026#39;结果已复制到剪贴板！\u0026#39;); }); } else { alert(\u0026#39;没有可复制的内容，请先提取数据。\u0026#39;); } } \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 将返回包粘贴即可获取\n4.利用在线平台进行收集 fofa hunter 钟馗之眼 360quake\n举例hunter icp.name=\u0026ldquo;菜鸟\u0026rdquo;\n5.被动子域名收集 fofa hunter等等\n6.主动子域名 扫扫扫 oneforall等工具\n7.小程序收集 1.如上面icp查询一样\n2.电脑 手机的微信搜索 手机跟电脑不一样\n8.app信息收集 1.苹果直接应该商店搜索\n2.安卓应用宝\n3.豌豆荚\nhttps://www.wandoujia.com/\n","date":"2024-12-27T00:00:00Z","permalink":"https://xx88cc66.github.io/p/%E6%8C%96src%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"挖src的信息收集小技巧"}]